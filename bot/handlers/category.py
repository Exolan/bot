from aiogram import Router
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext
from keyboards import back_buttons, select_buttons
from database import Database
from states import MenuState
from utils import open_image

category_router = Router()

@category_router.callback_query(lambda call: call.data.startswith("select_category_"))
async def select_category(call: CallbackQuery, db: Database, state: FSMContext,):
    await call.message.delete()
    await state.set_state(MenuState.select_category)
    await state.clear()

    callback_data = call.data

    category_id = callback_data.split("_")[2]

    await state.update_data(select_category = category_id)

    try:
        themes = await db.fetch_all(f"SELECT * FROM themes WHERE category_id = {category_id}")

        if themes:
            image = await open_image(f'{category_id}.jpg')

            if image:
                await call.message.answer_photo(
                    photo=image, 
                    caption="üéØ <b>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É:</b>", 
                    reply_markup=select_buttons(list=themes, isTheme=True)
                )
                return
            
            await call.message.answer("üéØ <b>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É:</b>", reply_markup=select_buttons(list=themes, isTheme=True))
        else:
            await call.message.answer(
                "‚ö† <b>–í —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∫–∞ –Ω–µ—Ç —Ç–µ–º</b>", 
                reply_markup=back_buttons()
            )
    
    except ValueError as e:
        await call.message.answer(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ", reply_markup=back_buttons())
        print(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")

    except Exception as e:
        await call.message.answer(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ", reply_markup=back_buttons())
        print(f"–û—à–∏–±–∫–∞: {e}")